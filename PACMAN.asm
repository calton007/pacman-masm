;输出ADDR字符串
PRINT	MACRO	ADDR
		LEA		DX,ADDR
		MOV		AH,09H
		INT		21H
ENDM
;四个幽灵的移动过程生成的宏
;R为标号，PATH为路径坐标，COUNT为移动了多少次
;LOCX LOCY为幽灵当前位置，COLOR为幽灵颜色
RUN MACRO R,PATH,LONG,COUNT,LOCX,LOCY,COLOR
		LOCAL	DOA,LIVE
RUN&R PROC	FAR
		LEA 	SI,PATH		;路径
		LEA		DI,MAP		;地图
		MOV		AX,COUNT	;位置
		CMP		AX,LONG		;是否到终点
		JL		DOA
		MOV		COUNT,0		;到终点置为0
	DOA:
		SETCURSOR	LOCX,LOCY	;置光标到当前位置
		MOV		DH,LOCX			;读当前坐标并进行变换
		SUB		DH,2
		MOV		DL,LOCY
		SUB		DL,2
		MOV		AL,55 	
		MUL		DH
		ADD		AL,DL
		ADC		AH,0
		MOV		BX,AX
		ADD		BX,2
		MOV		AL,[DI+BX]		;恢复该位置字符
		MOV		BH,0
		MOV		CX,1
		MOV		BL,WHITE
		MOV		AH,09H
		INT		10H		
		MOV		BX,COUNT
		ADD		BX,COUNT
		MOV		DH,[SI+BX]
		MOV		LOCX,DH
		ADD		BX,1
		MOV		DL,[SI+BX]
		MOV		LOCY,DL
		INC		COUNT
		SETCURSOR	LOCX,LOCY
		MOV		AL,'o'
		MOV		BH,0
		MOV		BL,COLOR
		MOV		AH,09H
		MOV		CX,1
		INT		10H
		MOV		AH,LOC_X
		MOV		AL,LOC_Y
		MOV		BH,LOCX
		MOV		BL,LOCY
		CMP		AX,BX
		JNE		LIVE
		DEC		DEATH
		DEC		LIFE
		CALL	FAR PTR SOUND
	LIVE:	
		RET
RUN&R ENDP
ENDM
;置光标位置的宏
;将光标置于X,Y
SETCURSOR MACRO X,Y
		MOV		BH,0
		MOV		DH,X
		MOV		DL,Y
		MOV 	AH,2
		INT		10H
ENDM
;玩家移动的宏
;NUM是坐标变换参数，KEY是坐标变换标志

MOVE MACRO NUM,KEY
		LOCAL E,E1,EXIT
		MOV 	AL,55
		MUL		LOC_X
		ADD 	AL,LOC_Y
		ADC 	AH,0
		SUB 	AX,NUM
		MOV 	BX,AX
		MOV 	AL,[DI+BX]
		CMP 	AL,0F9H			;判断是否可以前进
		JZ 		E
		CMP 	AL,0			;判断是否有豆子
		JZ 		E1
		JMP		EXIT
	E:
		CALL 	FAR PTR SOUNDE
		INC		NOW
		MOV 	AL,00
		MOV 	[DI+BX],AL		;吃了豆子
	E1:
		SETCURSOR	LOC_X,LOC_Y
		MOV 	CX,1		
		MOV 	AL,' '
		MOV 	BL,00000000B	
		MOV 	AH,09H
		INT 	10H				;当前位置置空格
		;坐标变换
	IF	KEY	EQ	LEFT_K
		DEC		DL
	ENDIF
	IF	KEY	EQ	RIGHT_K
		INC		DL
	ENDIF
	IF	KEY	EQ	UP_K
		DEC		DH
	ENDIF
	IF	KEY	EQ	DOWN_K
		INC		DH
	ENDIF
		MOV 	LOC_X,DH
		MOV 	LOC_Y,DL
		MOV 	AH,2
		INT 	10H			;置光标
		MOV 	CX,1
		MOV 	BH,0
		MOV 	AL,'O'
		MOV 	BL,YELLOW
		MOV 	AH,09H
		INT 	10H	
	EXIT:
	
ENDM
;判断输入且移动
;TAG1、TAG2、TAG3均为标号标记
NEXTX	MACRO 	TAG1,TAG2,NUM,KEY,TAG3
	NEXT&TAG1:
	X=X+1
		CMP 	AH,KEY
		JNE 	NEXT&TAG2	;跳转到下一个判断
	Z=Z+1
		MOVE	NUM,KEY		;判断游戏是否结束
		MOV 	CX,NOW
		CMP 	CX,SUM
	R&TAG1:
		JNZ 	R&TAG3		;跳转接力
	Y=Y+1	
		LEA		SI,YOUWIN
		CALL	OVER
		RET
ENDM
DATA SEGMENT
	;进入界面图形
	COVER	DB	1
			DB	6
			DB	00001111B
			DB	43 DUP(0FEH),0DH																	;1
			DB	0FEH,0DEH,4 DUP(0DBH),0DDH,3 DUP(20H),0DCH,20 DUP(20H),0DCH,10 DUP(20H),0FEH,0DH	;2
			DB	0FEH,20H,0DBH,3 DUP(20H),0DBH,2 DUP(20H),0DEH,0DBH,0DDH,11 DUP(20H),0DBH,2 DUP(20H)
			DB	0DBH,3 DUP(20H),0DEH,0DBH,0DDH,2 DUP(20H),0DBH,3 DUP(20H),0DBH,2 DUP(20H)
			DB	0FEH,0DH																			;3
			DB	0FEH,20H,0DBH,3 DUP(20H),0DBH,2 DUP(20H),0DBH,20H,0DBH,10 DUP(20H),0DEH
			DB	0DBH,0DDH,0DEH,0DBH,0DDH,2 DUP(20H),0DBH,20H,0DBH,2 DUP(20H),0DBH,0DDH
			DB	2 DUP(20H),0DBH,2 DUP(20H),0FEH,0DH													;4
			DB	0FEH,20H,0DBH,3 DUP(20H),0DBH,20H,0DEH,0DDH,20H,0DEH,0DDH,9 DUP(20H),0DBH,20H
			DB	2 DUP(0DBH),20H,0DBH,20H,0DEH,0DDH,20H,0DEH,0DDH,20H,0DBH,0DEH,2 DUP(20H)
			DB	0DBH,2 DUP(20H),0FEH,0DH															;5
			DB	0FEH,20H,4 DUP(0DBH),0DFH,20H,0DBH,3 DUP(20H),0DBH,6 DUP(20H),0DCH,20H,0DEH,0DDH,20H
			DB	0DEH,0DDH,20H,0DEH,0DDH,0DBH,3 DUP(20H),0DBH,20H,0DBH,20H,0DDH,20H,0DBH
			DB	2 DUP(20H),0FEH,0DH																	;6
			DB	0FEH,20H,0DBH,5 DUP(20H),0DBH,3 DUP(0DCH),0DBH,6 DUP(20H),0DFH,20H,0DEH,0DDH
			DB	20H,0DEH,0DDH,20H,0DEH,0DDH,0DBH,3 DUP(0DCH),0DBH,20H,0DBH,20H,0DEH,20H,0DBH
			DB	2 DUP(20H),0FEH,0DH																	;7
			DB	0FEH,20H,0DBH,5 DUP(20H),0DBH,3 DUP(20H),0DBH,8 DUP(20H),0DEH,0DDH,20H,0DEH,0DDH
			DB	20H,0DEH,0DDH,0DBH,3 DUP(20H),0DBH,20H,0DBH,2 DUP(20H),0DDH,0DBH,2 DUP(20H),0FEH,0DH	;8	
			DB	0FEH,20H,0DBH,5 DUP(20H),0DBH,3 DUP(20H),0DBH,8 DUP(20H),0DEH,0DDH,20H,0DEH,0DDH
			DB	20H,0DEH,0DDH,0DBH,3 DUP(20H),0DBH,20H,0DBH,2 DUP(20H),0DEH,0DBH,2 DUP(20H),0FEH,0DH	;9
			DB	0FEH,20H,39 DUP(0CDH),20H,0FEH,0DH													;10
			DB	43 DUP(0FEH),0DH																	;11
			DB	0FFH
	PACMAN	DB	2
			DB	20
			DB	00001110B
			DB	2 DUP(20H),3 DUP(0DCH),0DH
			DB	20H,4 DUP(0DBH),0DDH,0DH
			DB	0DEH,5 DUP(0DBH),0DH
			DB	2 DUP(0DBH),0DEH,2 DUP(0DBH),0DFH,0DH
			DB	3 DUP(0DBH),0DFH,0DH
			DB	3 DUP(0DBH),0DCH,0DH
			DB	5 DUP(0DBH),0DDH,0DH
			DB	0DEH,5 DUP(0DBH),0DH
			DB	20H,4 DUP(0DBH),20H,0DH
			DB	0FFH	
	BLUE	EQU	00000001B
	WHITE	EQU	00001111B
	YELLOW	EQU	00001110B
	RED		EQU	00000100B
	GREEN	EQU	00000010B
	BROWN	EQU 00000110B
	LBLUE	EQU 00001001B
	UP_K	EQU 48H
	DOWN_K	EQU 50H
	LEFT_K	EQU	4BH
	RIGHT_K	EQU 4DH
	;游戏地图
	MAP		DB	2
			DB	2
			DB	54 DUP(0DBH),0DH  																											;1
			DB	2 DUP(0DBH),20H,22 DUP(0F9H),20H,2 DUP(0DBH),20H,22 DUP(0F9H),20H,2 DUP(0DBH),0DH 											;2
			DB	2 DUP(0DBH),20H,0F9H,20H,7 DUP(0DBH),20H,0F9H,20H,8 DUP(0DBH),20H,0F9H,20H
			DB	2 DUP(0DBH),20H,0F9H,20H,8 DUP(0DBH),20H,0F9H,20H,7 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),0DH									;3
			DB	2 DUP(0DBH),20H,0F9H,20H,7 DUP(0DBH),20H,0F9H,20H,8 DUP(0DBH),20H,0F9H,20H
			DB	2 DUP(0DBH),20H,0F9H,20H,8 DUP(0DBH),20H,0F9H,20H,7 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),0DH									;4
			DB	2 DUP(0DBH),20H,48 DUP(0F9H),20H,2 DUP(0DBH),0DH																			;5
			DB	2 DUP(0DBH),20H,0F9H,20H,7 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),20H,0F9H,20H,14 DUP(0DBH)
			DB	20H,0F9H,20H,2 DUP(0DBH),20H,0F9H,20H,7 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),0DH												;6
			DB	2 DUP(0DBH),20H,11 DUP(0F9H),20H,2 DUP(0DBH),20H,7 DUP(0F9H),20H,2 DUP(0DBH),20H
			DB	7 DUP(0F9H),20H,2 DUP(0DBH),20H,11 DUP(0F9H),20H,2 DUP(0DBH),0DH															;7
			DB	12 DUP(0DBH),20H,0F9H,20H,8 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),20H,0F9H,20H,8 DUP(0DBH),20H,0F9H,20H,12 DUP(0DBH),0DH		;8																;8
			DB	10 DUP(20H),2 DUP(0DBH), 20H,0F9H,20H, 2 DUP(0DBH),20H,18 DUP(0F9H),20H
			DB	2 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),10 DUP(20H),0DH																		;9
			DB	12 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),20H,0F9H,20H,5 DUP(0DBH),20H,2 DUP(0F9H),20H,5 DUP(0DBH)
			DB	20H,0F9H,20H,2 DUP(0DBH),20H,0F9H,20H,12 DUP(0DBH),0DH																		;10
			DB	2 DUP(0DBH),20H,16 DUP(0F9H),20H,2 DUP(0DBH),10 DUP(00H),2 DUP(0DBH),20H,16 DUP(0F9H),20H,2 DUP(0DBH),0DH					;11
			DB	12 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),20H,0F9H,20H,14 DUP(0DBH)
			DB	20H,0F9H,20H,2 DUP(0DBH),20H,0F9H,20H,12 DUP(0DBH),0DH																		;12
			DB	10 DUP(20H),2 DUP(0DBH), 20H,0F9H,20H, 2 DUP(0DBH),20H,18 DUP(0F9H)
			DB	20H,2 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),10 DUP(20H),0DH																	;13
			DB	12 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),20H,0F9H,20H, 14 DUP(0DBH)
			DB	20H,0F9H,20H,2 DUP(0DBH),20H,0F9H,20H,12 DUP(0DBH),0DH																		;14
			DB	2 DUP(0DBH),20H,22 DUP(0F9H),20H,2 DUP(0DBH),20H,22 DUP(0F9H),20H,2 DUP(0DBH),0DH											;15
			DB	2 DUP(0DBH),20H,0F9H,20H,7 DUP(0DBH),20H,0F9H,20H,8 DUP(0DBH), 20H,0F9H,20H,2 DUP(0DBH)
			DB	20H,0F9H,20H,8 DUP(0DBH),20H,0F9H,20H,7 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),0DH												;16
			DB	2 DUP(0DBH),20H,6 DUP(0F9H),20H,2 DUP(0DBH),20H,28 DUP(0F9H),20H,2 DUP(0DBH),20H,6 DUP(0F9H),20H,2 DUP(0DBH),0DH			;17
			DB	7 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),20H,0F9H,20H, 2 DUP(0DBH),20H,0F9H,20H,14 DUP(0DBH)
			DB	20H,0F9H,20H,2 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),20H,0F9H,20H,7 DUP(0DBH),0DH												;18
			DB	2 DUP(0DBH),20H,11 DUP(0F9H),20H,2 DUP(0DBH),20H,7 DUP(0F9H),20H,2 DUP(0DBH)
			DB	20H,7 DUP(0F9H),20H,2 DUP(0DBH),20H,11 DUP(0F9H),20H,2 DUP(0DBH),0DH														;19
			DB	2 DUP(0DBH),20H,0F9H,20H,18 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),20H,0F9H,20H,18 DUP(0DBH),20H,0F9H,20H,2 DUP(0DBH),0DH		;20
			DB	2 DUP(0DBH),20H,48 DUP(0F9H),20H,2 DUP(0DBH),0DH																			;21
			DB	54 DUP(0DBH),0DH  																											;22
			DB 	0FFH
	;进入界面菜单
	START_N	DB '  S T A R T  $'
	START_Y	DB '< S T A R T >$'
	HELP_N	DB '   H E L P   $'
	HELP_Y	DB '<  H E L P  >$'
	EXIT_N	DB '   E X I T   $'
	EXIT_Y	DB '<  E X I T  >$'
	HELP	DB	'      Player controls Pac-Man by ',18H,20H,19H,20H,1BH,20H,1AH,20H,0AH,0DH
			DB	'      When all pac-dots are eaten, you win the game.',0AH,0DH
			DB	'      Four enemies are trying to catch Pac-Man.',0AH,0DH
			DB	'      Protect Pac-Man from the enemies.',0AH,0DH
			DB	'      Pac-Man has only 3 lives.',0AH,0DH
			DB	'      Good luck!',0AH,0DH
			DB	'      Press ANY key to START.',0AH,0DH,'$'
	SUM		DW	420		;豆豆总数
	SX		DB 	12		;起始位置
	SY		DB 	28		

	LOC_X	DB	12		;当前位置
	LOC_Y	DB	28
	ALOC_X	DB	3		;A的起点位置
	ALOC_Y	DB	5
	ACOUNT	DW	0		;A移动次数
	;A的路径
	APATH	DB	 3, 5, 3, 6, 3, 7, 3, 8, 3, 9, 3,10, 3,11, 3,12, 3,13, 3,14, 3,15, 3,16
			DB	 3,17, 3,18, 3,19, 3,20, 3,21, 3,22, 3,23, 3,24, 3,25, 3,26, 4,26, 5,26
			DB	 6,26, 6,27, 6,28, 6,29, 6,30, 6,31, 5,31, 4,31, 3,31, 3,32, 3,33, 3,34
			DB	 3,35, 3,36, 3,37, 3,38, 3,39, 3,40, 3,41, 3,42, 3,43, 3,44, 3,45, 3,46
			DB	 3,47, 3,48, 3,49, 3,50, 3,51, 3,52, 4,52, 5,52, 6,52, 7,52, 8,52, 8,51
			DB	 8,50, 8,49, 8,48, 8,47, 8,46, 8,45, 8,44, 8,43, 8,42, 7,42, 6,42, 6,41
			DB	 6,40, 6,39, 6,38, 6,37, 6,36, 6,35, 6,34, 6,33, 6,32, 6,31, 6,30, 6,29
			DB	 6,28, 6,27, 6,26, 6,25, 6,24, 6,23, 6,22, 6,21, 6,20, 6,19, 6,18, 6,17
			DB	 6,16, 6,15, 7,15, 8,15, 8,14, 8,13, 8,12, 8,11, 8,10, 8, 9, 8, 8, 8, 7
			DB	 8, 6, 8, 5, 7, 5, 6, 5, 5, 5, 4, 5
	BLOC_X	DB	22
	BLOC_Y	DB	5
	BCOUNT	DW	0
	BPATH	DB	22, 5,21, 5,20, 5,20, 6,20, 7,20, 8,20, 9,20,10,20,11,20,12,20,13,20,14
			DB	20,15,19,15,18,15,17,15,16,15,15,15,14,15,13,15,12,15,11,15,10,15, 9,15
			DB	 8,15, 7,15, 6,15, 6,16, 6,17, 6,18, 6,19, 6,20, 7,20, 8,20, 8,21, 8,22
			DB	 8,23, 8,24, 8,25, 8,26, 9,26,10,26,10,27,10,28,10,29,10,30,10,31,10,32
			DB	10,33,10,34,10,35,10,36,10,37,11,37,12,37,13,37,14,37,15,37,16,37,16,36
			DB	16,35,16,34,16,33,16,32,16,31,17,31,18,31,18,30,18,29,18,28,18,27,18,26
			DB	18,25,18,24,18,23,18,22,18,21,18,20,19,20,20,20,20,21,20,22,20,23,20,24
			DB	20,25,20,26,21,26,22,26,22,25,22,24,22,23,22,22,22,21,22,20,22,19,22,18
			DB	22,17,22,16,22,15,22,14,22,13,22,12,22,11,22,10,22, 9,22, 8,22, 7,22, 6
	CLOC_X	DB	14
	CLOC_Y	DB	20
	CCOUNT	DW	0
	CPATH	DB	14,20,15,20,16,20,16,19,16,18,16,17,16,16,16,15,16,14,16,13,16,12,16,11
			DB	16,10,16, 9,16, 8,16, 7,16, 6,16, 5,17, 5,18, 5,18, 6,18, 6,18, 8,18, 9
			DB	18,10,19,10,20,10,20,11,20,12,20,13,20,14,20,15,19,15,18,15,18,16,18,17
			DB	18,18,18,19,18,20,18,21,18,22,18,23,18,24,18,25,18,26,18,27,18,28,18,29
			DB	18,30,18,31,18,32,18,33,18,34,18,35,18,36,18,37,18,38,18,39,18,40,18,41
			DB	18,42,19,42,20,42,20,43,20,44,20,45,20,46,20,47,19,47,18,47,18,48,18,49
			DB	18,50,18,51,18,52,17,52,16,52,16,51,16,50,16,49,16,48,16,47,16,46,16,45
			DB	16,44,16,43,16,42,16,41,16,40,16,39,16,38,16,37,15,37,14,37,14,36,14,35
			DB	14,34,14,33,14,32,14,31,14,30,14,29,14,28,14,27,14,26,14,25,14,24,14,23
			DB	14,22,14,21
	DLOC_X	DB	20
	DLOC_Y	DB	42
	DCOUNT	DW	0
	DPATH	DB	20,42,20,43,20,44,20,45,20,46,20,47,20,48,20,49,20,50,20,51,20,52,21,52
			DB	22,52,22,51,22,50,22,49,22,48,22,47,22,46,22,45,22,44,22,43,22,42,22,41
			DB	22,40,22,39,22,38,22,37,22,36,22,35,22,34,22,33,22,32,22,31,21,31,20,31
			DB	20,32,20,33,20,34,20,35,20,36,20,37,19,37,18,37,18,36,18,35,18,34,18,33
			DB	18,32,18,31,18,30,18,29,18,28,18,27,18,26,17,26,16,26,16,25,16,24,16,23
			DB	16,22,16,21,16,20,15,20,14,20,13,20,12,20,11,20,10,20,10,21,10,22,10,23
			DB	10,24,10,25,10,26,10,27,10,28,10,29,10,30,10,31, 9,31, 8,31, 8,32, 8,33
			DB	 8,34, 8,35, 8,36, 8,37, 7,37, 6,37, 6,38, 6,39, 6,40, 6,41, 6,42, 7,42
			DB	 8,42, 9,42,10,42,11,42,12,42,13,42,14,42,15,42,16,42,17,42,18,42,19,42
	NOW		DW	0	;已经吃的豆豆数
	FLAG	DB 	0	;输出标志
	START_COL DB ?
	X		=	0
	Y		= 	-1
	Z		=	1
	OPT		DB	0	;菜单选项
	COUNT	DB	1	;定时器计数
	OLD1CH	DD	?	
	LIFE	DB	2	;生命
	DEATH	DB	0	;死亡标记
	STRING	DB	'SCORE',21 DUP(20H),'LIFE',0AH,0DH,'$'
	SPACE	DB	70 DUP(20H),'$'
	READY	DB	'READY?','$'
	GAMEOVER	DB	'GAMEOVER','$'
	YOUWIN	DB	'YOU  WIN','$'
	TEMP	DB	25
DATA ENDS
CODE SEGMENT
		ASSUME CS:CODE,DS:DATA,ES:DATA
MAIN PROC FAR
	START:
		PUSH	DS
		SUB		AX,AX
		PUSH	AX
		MOV		AX,DATA
		MOV		DS,AX
		MOV		ES,AX
		CALL	INITIAL
		LEA		DI,COVER
		CALL	GRAPHIC_TEXT
		LEA		DI,PACMAN
		CALL	GRAPHIC_TEXT
		MOV 	AL,1
		MOV 	FLAG,AL					;地图输出标志设置
		CALL	MENU	
		
		;游戏结束
		MOV 	AH,6
		MOV 	AL,0
		MOV 	BH,7
		MOV 	CH,0
		MOV 	CL,0
		MOV 	DH,24
		MOV 	DL,79
		INT 	10H			;清屏

		RET
MAIN ENDP
RUN	1,APATH,114,ACOUNT,ALOC_X,ALOC_Y,RED
RUN	2,BPATH,108,BCOUNT,BLOC_X,BLOC_y,GREEN
RUN	3,CPATH,110,CCOUNT,CLOC_X,CLOC_Y,BROWN
RUN	4,DPATH,108,DCOUNT,DLOC_X,DLOC_Y,LBLUE
TIME PROC NEAR
		PUSH	AX
		PUSH 	BX
		PUSH	CX
		PUSH	DX
		PUSH	DI
		PUSH	SI
		STI
		DEC		COUNT
		JNZ		EXIT2
		CALL	FAR PTR RUN1	
		CALL	FAR PTR RUN2	
		CALL	FAR PTR RUN3	
		CALL	FAR PTR RUN4			
		MOV		COUNT,3
	EXIT2:
		CLI
		POP		SI
		POP		DI
		POP		DX
		POP		CX
		POP		BX
		POP		AX
		IRET
TIME ENDP
;3种状态下主菜单
MENU PROC NEAR
	BEGIN:
		MOV		AL,OPT
		CMP		AL,0
		JNZ		NOTSTART
		SETCURSOR 14,20	
		PRINT	START_Y
		SETCURSOR 16,20	
		PRINT	HELP_N
		SETCURSOR 18,20		
		PRINT 	EXIT_N
		JMP		INPUT_T
	NOTSTART:	
		CMP		AL,1
		JNZ		NOTHELP
		SETCURSOR 14,20	
		PRINT	START_N
		SETCURSOR 16,20	
		PRINT 	HELP_Y
		SETCURSOR 18,20		
		PRINT	EXIT_N
		JMP		INPUT
	INPUT_T:
		JMP		INPUT
	BEGIN_T:
		JMP		BEGIN
	NOTHELP:	
		SETCURSOR 14,20	
		PRINT	START_N
		SETCURSOR 16,20	
		PRINT	HELP_N
		SETCURSOR 18,20		
		PRINT	EXIT_Y
	INPUT:	
		MOV 	AH,0
		INT 	16H
		CMP 	AH,1CH
		JZ		JUDGE1
		CMP		AH,UP_K
		JNZ		CMP1
		CALL	FAR  PTR SOUND
		MOV		AL,OPT
		SUB		AL,1
		CMP		AL,0
		JGE		T1				;判断是否小于0
		ADD		AL,3
	T1:	
		MOV		OPT,AL
		JMP		BEGIN_T
	CMP1:
		CMP		AH,DOWN_K
		JNZ		INPUT
		CALL	FAR  PTR SOUND
		MOV		AL,OPT
		ADD		AL,1
		CMP		AL,3
		JL		T2				;判断是否小于3
		SUB		AL,3
	T2:	
		MOV		OPT,AL
		JMP		BEGIN_T		
	JUDGE1:
		MOV 	AL,OPT
		CMP		AL,0
		JNZ		JUDGE2
		CALL	GAME
		RET
	JUDGE2:
		CMP		AL,1
		JNZ		JUDGE3
		SETCURSOR	14,0
		PRINT	HELP
	WAITIN:
		MOV		AH,0BH
		INT 	21H
		CMP		AL,00
		JZ		WAITIN
		CALL	GAME
	JUDGE3:
		RET
MENU ENDP

;开始游戏和结束游戏
GAME PROC NEAR
		MOV		AL,1CH
		MOV		AH,35H
		INT 	21H
		MOV		WORD PTR OLD1CH,BX
		MOV		WORD PTR OLD1CH,ES
		PUSH	DS
		MOV		DX,OFFSET TIME
		MOV		AX,SEG TIME
		MOV 	DS,AX
		MOV		AL,1CH
		MOV		AH,25H
		INT		21H				;修改定时器中断服务程序
		POP		DS		
		IN		AL,21H
		AND		AL,11111100B
		OUT		21H,AL	
		CALL	INGAME
		;恢复
		
		PUSH	DS
		MOV		DX,WORD PTR OLD1CH
		MOV		AX,WORD	PTR	OLD1CH+2
		MOV		DS,AX
		MOV		AL,1CH
		MOV		AH,25H
		INT 	21H
		POP		DS
		RET
GAME ENDP
;获胜或者失败
OVER PROC NEAR		
		MOV		CX,8			
	P:
		SETCURSOR	12,TEMP
		MOV		AH,09H
		MOV		BH,0
		MOV		BL,10001111B
		INC		TEMP
		MOV		AL,[SI]
		INC		SI
		PUSH	CX
		MOV		CX,1	
		INT		10H
		POP		CX
		LOOP	P
	WAITIN2:
		MOV		AH,0BH
		INT 	21H
		CMP		AL,00
		JZ		WAITIN2
		SETCURSOR 0,0
		MOV 	AH,6
		MOV 	AL,0
		MOV 	BH,7
		MOV 	CH,0
		MOV 	CL,0
		MOV 	DH,24
		MOV 	DL,79
		INT 	10H			;清屏
		
		PUSH	DS
		MOV		DX,WORD PTR OLD1CH
		MOV		AX,WORD	PTR	OLD1CH+2
		MOV		DS,AX
		MOV		AL,1CH
		MOV		AH,25H
		INT 	21H
		POP		DS
		
		MOV		AX,4C00H
		INT		21H
OVER ENDP
;判断移动
INGAME PROC NEAR	
		SETCURSOR 0,0			;清屏
		PRINT	SPACE
		SETCURSOR 1,0
		PRINT	SPACE
		SETCURSOR 0,13
		PRINT 	STRING
	RESTART:
		CLI
		LEA 	DI,MAP
		CALL 	GRAPHIC_TEXT	
		SETCURSOR	12,26
		PRINT	READY
		CALL WAITF			;倒计时
		LEA 	DI,MAP		
		CALL 	GRAPHIC_TEXT	
		INC		DEATH
		SETCURSOR	SX,SY
		MOV 	DH,SX
		MOV		LOC_X,DH
		MOV 	DL,SY
		MOV		LOC_Y,DL
		MOV 	AL,'O'
		MOV 	BL,YELLOW
		MOV 	CX,1
		MOV 	AH,9
		INT 	10H
		LEA 	DI,MAP+2
		STI
	RA:	
		MOV		AL,DEATH		;判断是否死亡
		CMP		AL,0
		JNE		SKIP1
		MOV		AL,LIFE			;判断是否还有生命
		CMP		AL,0
		JGE		RESTART
		CLI
		LEA		SI,GAMEOVER
		CALL	OVER
		RET
	SKIP1:
		STI
		CALL 	SCORE
		MOV 	AH,0
		INT 	16H
		JMP		SKIP2
	R65535:
		JMP		RA
	SKIP2:
		NEXTX	%X,%Z,167,UP_K,%Y
		NEXTX	%X,%Z,57,DOWN_K,%Y
		NEXTX	%X,%Z,113,LEFT_K,%Y
		NEXTX	%X,%Z,111,RIGHT_K,%Y
	NEXT4:
		JMP 	R65535	
INGAME ENDP
;显示分数
SCORE PROC NEAR
		SETCURSOR	1,14
		MOV		BX,NOW
		MOV 	CX,100
		CALL 	DISPLAY
		MOV 	CX,10
		CALL 	DISPLAY
		MOV 	CX,1
		CALL 	DISPLAY
		SETCURSOR 1,41
		MOV		BH,0
		MOV		BL,LIFE
		MOV		CX,1
		CALL	DISPLAY
		RET
SCORE ENDP
DISPLAY PROC NEAR
		MOV 	AX,BX
		MOV 	DX,0
		DIV 	CX
		MOV 	BX,DX
		MOV 	DL,AL
		ADD 	DL,30H
		MOV 	AH,02H
		INT 	21H
		RET
DISPLAY ENDP
INITIAL PROC NEAR
		PUSH 	AX
		PUSH 	BX
		PUSH 	CX
		PUSH 	DX
		MOV 	AH,6
		MOV 	AL,0
		MOV 	BH,0FH
		MOV 	CH,0
		MOV 	CL,0
		MOV 	DH,24
		MOV 	DL,79
		INT 	10H			;清屏
		SETCURSOR	0,0
		MOV 	CX,2000H
		MOV 	AH,01H
		INT 	10H			;隐藏光标
		POP 	DX
		POP 	CX
		POP 	BX
		POP 	AX
INITIAL ENDP
GRAPHIC_TEXT PROC NEAR
		MOV 	DH,[DI]			;从哪一行开始
		INC 	DI	
		MOV 	DL,[DI]			;从哪一列开始
		MOV 	START_COL,DL
		MOV 	AH,2
		MOV 	BH,0			;置光标
		INT 	10H
		MOV 	CL,FLAG
		CMP 	CL,0
		JNZ 	CHAR_WRITE
		INC 	DI
		MOV 	BL,[DI]		
	CHAR_WRITE:
		INC 	DI
		MOV 	AL,[DI]
		CMP 	AL,0DH			;判断一行是否结束
		JE 		BUMP_ROW
		CMP 	AL,0FFH			;判断图案是否结束
		JZ 		END_TEXT
		CALL 	SHOW_CHAR
		JMP 	CHAR_WRITE
	END_TEXT:
		RET
	BUMP_ROW:
		INC 	DH
		MOV 	DL,START_COL
		MOV 	AH,2
		MOV 	BH,0
		INT 	10H				;置光标
		JMP 	CHAR_WRITE
GRAPHIC_TEXT ENDP
SHOW_CHAR PROC NEAR
		MOV 	CL,FLAG
		CMP 	CL,0
		JE		SKIP
		CMP 	AL,0F9H			;判断是否是"豆豆"
		JE 		POINT
		MOV 	BL,BLUE			;不是"豆豆"颜色设置为蓝色
		JMP 	SKIP
	POINT:
		MOV 	BL,WHITE		;是"豆豆"颜色设置白色
		JMP 	SKIP
	SKIP:
		MOV 	AH,9
		MOV 	BH,0
		MOV 	CX,1
		INT 	10H				;显示字符
		INC 	DL
		MOV 	AH,2
		MOV 	BH,0
		INT 	10H				;置光标
		RET
SHOW_CHAR ENDP	
SOUND PROC FAR
		PUSH 	DX
		PUSH 	AX
		PUSH 	CX
		MOV 	DX,20
		IN 		AL,61H
		AND 	AL,0FCH
	SOUND1:
		XOR 	AL,02H
		OUT 	61H,AL
		MOV 	CX,1200H
	WAIT1:
		LOOP	WAIT1
		DEC 	DX
		JNE 	SOUND1
		POP 	CX
		POP 	AX
		POP 	DX
		RET
SOUND ENDP	
SOUNDE PROC FAR
		PUSH 	DX
		PUSH 	AX
		PUSH 	CX
		MOV 	DX,10
		IN 		AL,61H
		AND 	AL,0FCH
	SOUND3:
		XOR 	AL,02H
		OUT 	61H,AL
		MOV 	CX,200H
	WAIT3:
		LOOP	WAIT3
		DEC 	DX
		JNE 	SOUND3
		POP 	CX
		POP 	AX
		POP 	DX
		RET
SOUNDE ENDP
SOUNDS PROC FAR
		PUSH 	DX
		PUSH 	AX
		PUSH 	CX
		MOV 	DX,50
		IN 		AL,61H
		AND 	AL,0FCH
	SOUND4:
		XOR 	AL,02H
		OUT 	61H,AL
		MOV 	CX,4000H
	WAIT4:
		LOOP	WAIT4
		DEC 	DX
		JNE 	SOUND4
		POP 	CX
		POP 	AX
		POP 	DX
		RET
SOUNDS ENDP
;延时
WAITF PROC NEAR
		PUSH	AX
		PUSH	CX
		MOV		CX,6
	WAITF2:
		PUSH	CX
		MOV		CX,65000
	WAITF1:
		IN		AL,61H
		AND		AL,10H
		CMP		AL,AH
		JE		WAITF1
		MOV		AH,AL
		LOOP	WAITF1	
		POP		CX
		LOOP	WAITF2
		CALL	FAR PTR SOUNDS
		POP		AX
		POP		CX
		RET
WAITF ENDP
CODE ENDS
END START